server:
  port: 9002

spring:
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://localhost:3306/cuner?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    filters: stat
    maxActive: 20
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20

  application:
    name: cuner-sys-provider-mq # 注册到Eureka的应用名称

  session:                   # spring seesion登录
    store-type: redis
    timeout: PT1M
  redis:
    database: 1
    host: 127.0.0.1
    password:

  zipkin:  #整合zipkin
    sender:
      type: kafka
    kafka:
      topic: zipkin
  sleuth:  #整合zipkin
    sampler:
      probability: 1.0

  cloud:
    stream:
      kafka:   #Kafka消息总线
        binder:
          auto-create-topics: false   # kafka binder在启动时会尝试连接本地zookeeper，如果本地没有zookeeper服务的话就会报错导致启动失败
          brokers: localhost:9092
          zk-nodes: localhost:2181
      bindings:
        hystrixStreamOutput:
          destination: hystrixStreamDest  # hystrix队列名称

mybatis:
  mapperLocations: classpath:mappers/*.xml
  config-location: classpath:mybatis-config.xml

#pagehelper
pagehelper:
  auto-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: countSql

logging:
  config: classpath:logback-spring.xml
  level:
    root: INFO
    org.springframework.cloud.sleuth: DEBUG
    # org.springframework.web.servlet.DispatcherServlet: DEBUG

swagger:
  title: App Doc
  description: App Doc
  version: 1.0.0
  enable: true

eureka:                # 注册到Eureka
  client:
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/
  instance:
    instance-id: cuner-sys-provider9002
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: '*'     # 配置actuator监控